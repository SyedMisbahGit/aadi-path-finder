
import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { FileText, Download, Share, User } from "lucide-react";
import { toast } from "sonner";

interface ParentReportProps {
  recommendations: any[];
  studentData: any;
}

export const ParentReport = ({ recommendations, studentData }: ParentReportProps) => {
  const [language, setLanguage] = useState<'english' | 'hindi' | 'bilingual'>('bilingual');
  const [studentName, setStudentName] = useState('');
  const [isGenerating, setIsGenerating] = useState(false);

  const generateReport = async () => {
    if (!studentName.trim()) {
      toast.error("Please enter student name for the report");
      return;
    }

    setIsGenerating(true);

    try {
      // Simulate report generation
      await new Promise(resolve => setTimeout(resolve, 2000));

      const reportContent = generateReportContent();
      
      if (language === 'english' || language === 'bilingual') {
        downloadReport(reportContent.english, `${studentName}_College_Report_EN.pdf`);
      }
      
      if (language === 'hindi' || language === 'bilingual') {
        downloadReport(reportContent.hindi, `${studentName}_College_Report_HI.pdf`);
      }

      toast.success("Parent report generated successfully!");
    } catch (error) {
      toast.error("Failed to generate report. Please try again.");
    } finally {
      setIsGenerating(false);
    }
  };

  const generateReportContent = () => {
    const topRecommendations = recommendations.slice(0, 10);
    
    const englishContent = `
ü§ñ AL-NASEEH COLLEGE COUNSELING REPORT
ÿßŸÑŸÜÿßÿµÿ≠ - Your Honest AI Advisor

STUDENT INFORMATION:
Name: ${studentName}
Exam: ${studentData?.examName || 'NEET 2025'}
Score: ${studentData?.marks || 'N/A'}
Category: ${studentData?.category || 'N/A'}
State: ${studentData?.domicileState || 'N/A'}

TOP COLLEGE RECOMMENDATIONS:

${topRecommendations.map((rec, index) => `
${index + 1}. ${rec.collegeName || 'College Name'}
   üìç Location: ${rec.location || 'Location'}
   üí∞ Annual Fees: ‚Çπ${rec.fees || '50,000'} - ‚Çπ${rec.maxFees || '1,00,000'}
   üéØ Admission Chance: ${rec.probability || '75'}%
   üõ°Ô∏è Safety Score: ${rec.safetyScore || '8'}/10
   üè† Hostel: ${rec.hostelAvailable ? 'Available' : 'Not Available'}
   üí∞ Total Cost (4 years): ‚Çπ${rec.totalCost || '4,00,000'}
`).join('')}

IMPORTANT NOTES FOR PARENTS:
‚úÖ All colleges listed are accredited and recognized
‚úÖ Safety scores based on campus security, city crime rates, and student reviews
‚úÖ Cost estimates include tuition, hostel, and basic living expenses
‚úÖ Cultural compatibility considered for minority students

For more information, visit: https://your-platform.com
Generated on: ${new Date().toLocaleDateString()}
    `;

    const hindiContent = `
ü§ñ ‡§Ö‡§≤-‡§®‡§æ‡§∏‡•Ä‡§π ‡§ï‡•â‡§≤‡•á‡§ú ‡§ï‡§æ‡§â‡§Ç‡§∏‡§≤‡§ø‡§Ç‡§ó ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü
ÿßŸÑŸÜÿßÿµÿ≠ - ‡§Ü‡§™‡§ï‡§æ ‡§à‡§Æ‡§æ‡§®‡§¶‡§æ‡§∞ AI ‡§∏‡§≤‡§æ‡§π‡§ï‡§æ‡§∞

‡§õ‡§æ‡§§‡•ç‡§∞ ‡§ï‡•Ä ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä:
‡§®‡§æ‡§Æ: ${studentName}
‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§æ: ${studentData?.examName || 'NEET 2025'}
‡§Ö‡§Ç‡§ï: ${studentData?.marks ‡§Ø‡§æ 'N/A'}
‡§∂‡•ç‡§∞‡•á‡§£‡•Ä: ${studentData?.category || 'N/A'}
‡§∞‡§æ‡§ú‡•ç‡§Ø: ${studentData?.domicileState || 'N/A'}

‡§∂‡•Ä‡§∞‡•ç‡§∑ ‡§ï‡•â‡§≤‡•á‡§ú ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂‡•á‡§Ç:

${topRecommendations.map((rec, index) => `
${index + 1}. ${rec.collegeName || '‡§ï‡•â‡§≤‡•á‡§ú ‡§ï‡§æ ‡§®‡§æ‡§Æ'}
   üìç ‡§∏‡•ç‡§•‡§æ‡§®: ${rec.location || '‡§∏‡•ç‡§•‡§æ‡§®'}
   üí∞ ‡§µ‡§æ‡§∞‡•ç‡§∑‡§ø‡§ï ‡§´‡•Ä‡§∏: ‚Çπ${rec.fees || '50,000'} - ‚Çπ${rec.maxFees || '1,00,000'}
   üéØ ‡§™‡•ç‡§∞‡§µ‡•á‡§∂ ‡§ï‡•Ä ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ: ${rec.probability || '75'}%
   üõ°Ô∏è ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§∏‡•ç‡§ï‡•ã‡§∞: ${rec.safetyScore || '8'}/10
   üè† ‡§π‡•â‡§∏‡•ç‡§ü‡§≤: ${rec.hostelAvailable ? '‡§â‡§™‡§≤‡§¨‡•ç‡§ß' : '‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§®‡§π‡•Ä‡§Ç'}
   üí∞ ‡§ï‡•Å‡§≤ ‡§≤‡§æ‡§ó‡§§ (4 ‡§∏‡§æ‡§≤): ‚Çπ${rec.totalCost || '4,00,000'}
`).join('')}

‡§Æ‡§æ‡§§‡§æ-‡§™‡§ø‡§§‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§π‡§§‡•ç‡§µ‡§™‡•Ç‡§∞‡•ç‡§£ ‡§®‡•ã‡§ü‡•ç‡§∏:
‚úÖ ‡§∏‡§≠‡•Ä ‡§∏‡•Ç‡§ö‡•Ä‡§¨‡§¶‡•ç‡§ß ‡§ï‡•â‡§≤‡•á‡§ú ‡§Æ‡§æ‡§®‡•ç‡§Ø‡§§‡§æ ‡§™‡•ç‡§∞‡§æ‡§™‡•ç‡§§ ‡§î‡§∞ ‡§™‡§π‡§ö‡§æ‡§®‡•á ‡§ó‡§è ‡§π‡•à‡§Ç
‚úÖ ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§∏‡•ç‡§ï‡•ã‡§∞ ‡§ï‡•à‡§Ç‡§™‡§∏ ‡§∏‡§ø‡§ï‡•ç‡§Ø‡•ã‡§∞‡§ø‡§ü‡•Ä, ‡§∂‡§π‡§∞ ‡§ï‡•Ä ‡§Ö‡§™‡§∞‡§æ‡§ß ‡§¶‡§∞ ‡§î‡§∞ ‡§õ‡§æ‡§§‡•ç‡§∞ ‡§∏‡§Æ‡•Ä‡§ï‡•ç‡§∑‡§æ ‡§™‡§∞ ‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§
‚úÖ ‡§≤‡§æ‡§ó‡§§ ‡§Ö‡§®‡•Å‡§Æ‡§æ‡§® ‡§Æ‡•á‡§Ç ‡§ü‡•ç‡§Ø‡•Ç‡§∂‡§®, ‡§π‡•â‡§∏‡•ç‡§ü‡§≤ ‡§î‡§∞ ‡§¨‡•Å‡§®‡§ø‡§Ø‡§æ‡§¶‡•Ä ‡§ú‡•Ä‡§µ‡§® ‡§Ø‡§æ‡§™‡§® ‡§ñ‡§∞‡•ç‡§ö ‡§∂‡§æ‡§Æ‡§ø‡§≤
‚úÖ ‡§Ö‡§≤‡•ç‡§™‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§ï ‡§õ‡§æ‡§§‡•ç‡§∞‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡§æ‡§Ç‡§∏‡•ç‡§ï‡•É‡§§‡§ø‡§ï ‡§∏‡§Ç‡§ó‡§§‡§§‡§æ ‡§™‡§∞ ‡§µ‡§ø‡§ö‡§æ‡§∞

‡§Ö‡§ß‡§ø‡§ï ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¶‡•á‡§ñ‡•á‡§Ç: https://your-platform.com
‡§¨‡§®‡§æ‡§Ø‡§æ ‡§ó‡§Ø‡§æ: ${new Date().toLocaleDateString()}
    `;

    return { english: englishContent, hindi: hindiContent };
  };

  const downloadReport = (content: string, filename: string) => {
    const blob = new Blob([content], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const link = document.createElement('a');
    link.href = url;
    link.download = filename;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
  };

  const shareViaWhatsApp = () => {
    const message = `ü§ñ *AL-NASEEH COLLEGE REPORT* 

‡§Æ‡•á‡§∞‡•á ‡§¨‡§ö‡•ç‡§ö‡•á ${studentName} ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡•â‡§≤‡•á‡§ú ‡§ï‡•Ä ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∂:

${recommendations.slice(0, 3).map((rec, index) => `
${index + 1}. ${rec.collegeName || 'College'} - ${rec.location || 'Location'}
   ‡§™‡•ç‡§∞‡§µ‡•á‡§∂ ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§®‡§æ: ${rec.probability || '75'}%
   ‡§∏‡•Å‡§∞‡§ï‡•ç‡§∑‡§æ ‡§∏‡•ç‡§ï‡•ã‡§∞: ${rec.safetyScore || '8'}/10`).join('')}

Al-Naseeh AI ‡§∏‡•á ‡§™‡•Ç‡§∞‡•Ä ‡§∞‡§ø‡§™‡•ã‡§∞‡•ç‡§ü: [Link]`;

    const whatsappUrl = `https://wa.me/?text=${encodeURIComponent(message)}`;
    window.open(whatsappUrl, '_blank');
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <FileText className="w-5 h-5" />
          Parent-Friendly Report
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="grid md:grid-cols-2 gap-4">
          <div>
            <Label htmlFor="studentName">Student Name</Label>
            <Input
              id="studentName"
              value={studentName}
              onChange={(e) => setStudentName(e.target.value)}
              placeholder="Enter student's name"
              className="mt-1"
            />
          </div>
          
          <div>
            <Label htmlFor="language">Report Language</Label>
            <Select value={language} onValueChange={(value: any) => setLanguage(value)}>
              <SelectTrigger className="mt-1">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="english">English Only</SelectItem>
                <SelectItem value="hindi">Hindi Only</SelectItem>
                <SelectItem value="bilingual">Both (Bilingual)</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </div>

        <div className="bg-blue-50 p-4 rounded-lg">
          <h4 className="font-semibold text-blue-900 mb-2">Report will include:</h4>
          <ul className="text-sm text-blue-800 space-y-1">
            <li>‚úì Top 10 college recommendations</li>
            <li>‚úì Safety scores for each college</li>
            <li>‚úì Cost breakdown (fees + living expenses)</li>
            <li>‚úì Admission probability for each option</li>
            <li>‚úì Hostel and facility information</li>
            <li>‚úì Cultural compatibility notes</li>
          </ul>
        </div>

        <div className="flex gap-2">
          <Button 
            onClick={generateReport} 
            disabled={isGenerating || !studentName.trim()}
            className="flex-1"
          >
            {isGenerating ? (
              "Generating Report..."
            ) : (
              <>
                <Download className="w-4 h-4 mr-2" />
                Download Report
              </>
            )}
          </Button>
          
          <Button 
            variant="outline" 
            onClick={shareViaWhatsApp}
            disabled={!studentName.trim()}
          >
            <Share className="w-4 h-4 mr-2" />
            WhatsApp
          </Button>
        </div>
      </CardContent>
    </Card>
  );
};
